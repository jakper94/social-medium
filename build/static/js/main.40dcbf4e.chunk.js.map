{"version":3,"sources":["components/navigation/navigation.js","components/home/newsfeed/news.js","components/home/newsfeed/newsfeed.js","components/home/notifications/notis.js","components/home/notifications/notifications.js","components/home/home.js","components/progressBar/progressBar.js","components/courses/courseBox/courseBox.js","components/courses/courses.js","components/projeccts/projects.js","components/assignments/assignmentbox/assignmentbox.js","components/assignments/quizbox/quixbox.js","components/assignments/assignments.js","components/right-side-bar/right-side-bar.js","components/courses/coursePage/courseInfo/profileBox/profileBox.js","components/courses/coursePage/courseInfo/courseInfo.js","components/courses/coursePage/calendar/calendar.js","components/courses/coursePage/coursePage.js","components/app/App.js","serviceWorker.js","index.js"],"names":["Navigation","scrollToTop","window","scrollTo","className","exact","to","onClick","News","name","imgUrl","message","class","src","process","alt","Newsfeed","newsfeeddata","data","news","classname","map","newsdata","Notis","type","icon","Notifications","notisdata","notifications","nodata","Home","ProgressBar","inputProgress","progress","percentage","value","text","styles","buildStyles","textSize","pathColor","textColor","trailColor","setProgressbar","CourseBox","courseName","info","newCourse","id","hp","participants","href","checkIfNewCourse","Courses","courses","courseData","completedCourses","cours","completedCours","Projects","Assignmentbox","assignment","corrected","submitted","passed","duration","QuizBox","quizName","information","Assignments","assignments","assignmentData","quizes","quiz","title","RightSideBar","ProfileBox","employment","profileImage","email","linkedIn","CourseInfo","courseInfo","target","ReactCalendar","useState","date","Date","setDate","onChange","CoursePage","App","path","component","from","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"4sKAmCeA,G,MAhCI,WACjB,IAAMC,EAAc,WAClBC,OAAOC,SAAS,EAAG,IAErB,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kBAGf,yBAAKA,UAAU,QACb,2CAGJ,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIC,QAAS,kBAAMN,MAArC,QAGA,kBAAC,IAAD,CAASI,OAAK,EAACC,GAAG,WAAWC,QAAS,kBAAMN,MAA5C,WAGA,kBAAC,IAAD,CAASI,OAAK,EAACC,GAAG,eAAeC,QAAS,kBAAMN,MAAhD,eAGA,kBAAC,IAAD,CAASI,OAAK,EAACC,GAAG,YAAYC,QAAS,kBAAMN,MAA7C,gBCROO,G,kBAhBF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5B,OACE,yBAAKP,UAAU,WACb,yBAAKQ,MAAM,gBACT,yBAAKC,IAAKC,GAAyBJ,EAAQK,IAAKN,KAElD,yBAAKL,UAAU,QACb,4BAAKK,IAEP,yBAAKL,UAAU,WACb,2BAAIO,O,QCUGK,EAlBE,WACf,IAAMC,EAAeC,EAAKC,KAC1B,OACE,yBAAKf,UAAU,YACb,wCACA,yBAAKgB,UAAU,WACZH,EAAaI,KAAI,SAACC,GAAD,OAChB,kBAAC,EAAD,CACEb,KAAMa,EAASb,KACfC,OAAQY,EAASZ,OACjBC,QAASW,EAASX,gB,8BCYfY,EAXD,SAAC,GAAuB,IATrBC,EASAb,EAAoB,EAApBA,QAASc,EAAW,EAAXA,KACxB,OACE,yBAAKrB,UAAU,YACb,yBAAKA,UAAU,aAXP,WADGoB,EAYyBC,GAV/B,kBAAC,IAAD,MACU,QAARD,EACF,kBAAC,IAAD,MACU,QAARA,EACF,kBAAC,IAAD,WADF,GAQH,yBAAKpB,UAAU,YACb,2BAAIO,M,QCJGe,EAZO,WACpB,IAAMC,EAAYT,EAAKU,cACvB,OACE,yBAAKxB,UAAU,QACb,6CACCuB,EAAUN,KAAI,SAACQ,GAAD,OACb,kBAAC,EAAD,CAAOJ,KAAMI,EAAOJ,KAAMd,QAASkB,EAAOlB,eCYnCmB,EAlBF,WACX,OACE,6BACE,oCACA,yBAAK1B,UAAU,kBACb,yBAAKA,UAAU,SACZ,IACD,kBAAC,EAAD,OAEF,yBAAKA,UAAU,SACZ,IACD,kBAAC,EAAD,U,sCCQK2B,G,MApBI,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAgBjB,OACI,yBAAK5B,UAAU,eAhBI,SAAC6B,GACpB,IAAMC,EAAaD,EACnB,OACE,kBAAC,IAAD,CACEE,MAAOD,EACPE,KAAI,UAAKF,EAAL,KACJG,OAAQC,YAAY,CAClBC,SAAU,OACVC,UAAU,uBAAD,OAAyBN,EAAa,GAAtC,KACTO,UAAW,UACXC,WAAY,cAMYC,CAAeX,MC+BtCY,EA9CG,SAAC,GASZ,IARLC,EAQI,EARJA,WACAnC,EAOI,EAPJA,OACAoC,EAMI,EANJA,KACAC,EAKI,EALJA,UACAC,EAII,EAJJA,GACAC,EAGI,EAHJA,GACAC,EAEI,EAFJA,aACAlB,EACI,EADJA,cAYA,OACE,uBAAGmB,KAAM,YAAcH,EAAI5C,UAAU,aACnC,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKS,IAAKC,GAAyBJ,EAAQK,IAAK8B,IAd/B,WACvB,GAAIE,EACF,OACE,yBAAK3C,UAAU,gBACb,oCAWCgD,IAEH,4BAAKP,GACL,yBAAKzC,UAAU,MACb,kBAAC,IAAD,CAAiBA,UAAU,kBAC3B,4BAAK6C,EAAL,OAEF,2BAAIH,GACJ,yBAAK1C,UAAU,gBACb,kBAAC,IAAD,CAAaA,UAAU,eAAgB,IACvC,4BAAK8C,EAAL,kBAEF,kBAAC,EAAD,CAAalB,cAAeA,KAE9B,yBAAK5B,UAAU,QACb,gD,QCDOiD,EAxCC,WAEd,IAAMC,EAAUC,EAAWD,QACrBE,EAAkBD,EAAWC,iBACnC,OACE,yBAAKpD,UAAU,WACb,+CACA,yBAAKA,UAAU,cACZkD,EAAQjC,KAAI,SAACoC,GAAD,OACX,kBAAC,EAAD,CACEZ,WAAYY,EAAMZ,WAClBnC,OAAQ+C,EAAM/C,OACdoC,KAAMW,EAAMX,KACZC,UAAWU,EAAMV,UACjBC,GAAIS,EAAMT,GACVC,GAAIQ,EAAMR,GACVC,aAAcO,EAAMP,aACpBlB,cAAeyB,EAAMxB,eAI3B,iDACA,yBAAK7B,UAAU,cACZoD,EAAiBnC,KAAI,SAACqC,GAAD,OACpB,kBAAC,EAAD,CACEb,WAAYa,EAAeb,WAC3BnC,OAAQgD,EAAehD,OACvBoC,KAAMY,EAAeZ,KACrBC,UAAWW,EAAeX,UAC1BC,GAAIU,EAAeV,GACnBC,GAAIS,EAAeT,GACnBC,aAAcQ,EAAeR,aAC7BlB,cAAe0B,EAAezB,iBCxB3B0B,G,MAVE,WACf,OACE,iCACE,6BACE,4CC8COC,G,YAlDO,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,WAAWC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,OAAQlB,EAAoB,EAApBA,KAAMmB,EAAc,EAAdA,SAiCtE,OACE,yBAAK7D,UAAU,cACb,yBAAKA,UAAU,iBAhCb2D,EACCD,EACEE,EAEC,yBAAK5D,UAAU,UACb,uCAGK4D,OAAJ,EAEH,yBAAK5D,UAAU,aACb,2CAMN,yBAAKA,UAAU,aACX,0CAKF,yBAAKA,UAAU,gBACb,8CAUJ,yBAAKA,UAAU,aACb,2BAAI0C,GACF,yBAAK1C,UAAU,YACb,iDAAuB6D,EAAvB,aAIJ,4BAAKJ,EAAL,QCTKK,G,MAnCC,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,YAAaL,EAAyB,EAAzBA,UAAW9B,EAAc,EAAdA,SAkBnD,OACE,yBAAK7B,UAAU,QACb,yBAAKA,UAAU,WAjBd2D,EAEC,yBAAK3D,UAAU,aACb,0CAKF,yBAAKA,UAAU,gBACb,4CAUA,yBAAKA,UAAU,YACX,2BAAIgE,GACJ,yBAAKhE,UAAU,YACX,wCAAc6B,EAAd,QAKZ,4BAAKkC,M,QCiBIE,EA3CK,WAClB,IAAMC,EAAcC,EAAeD,YAC7BE,EAASD,EAAeE,KAE9B,OACE,iCACE,yBAAKrE,UAAU,eACb,2CACA,yBAAKA,UAAU,mBAEXkE,EAAYjD,KAAI,SAACwC,GAAD,OACd,kBAAC,EAAD,CACIA,WAAYA,EAAWa,MACvBZ,UAAWD,EAAWC,UACtBC,UAAWF,EAAWE,UACtBC,OAAQH,EAAWG,OACnBlB,KAAMe,EAAWO,YACjBH,SAAUJ,EAAWI,gBAMjC,yBAAK7D,UAAU,UACX,8CACA,yBAAKA,UAAU,aAEXoE,EAAOnD,KAAI,SAACoD,GAAD,OACR,kBAAC,EAAD,CACGN,SAAUM,EAAKN,SACfJ,UAAWU,EAAKV,UAChBK,YAAaK,EAAKL,YAClBnC,SAAUwC,EAAKxC,kBC7BpB0C,G,MAPM,WACnB,OAAO,yBAAKvE,UAAU,OAClB,wCACA,4C,wCCqBSwE,EAtBI,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,MAAOtE,EAAqB,EAArBA,KAAMuE,EAAe,EAAfA,SAC3D,OACE,yBAAK5E,UAAU,cACb,4BAAKyE,GAEL,yBACEzE,UAAU,eACVS,IAAKC,GAAyBgE,EAC9B/D,IAAKN,IAEP,4BAAKA,GACL,yBAAKL,UAAU,cACb,uBAAG+C,KAAM,UAAY4B,GACnB,kBAAC,IAAD,OAEF,uBAAG5B,KAAM6B,GACP,kBAAC,IAAD,UCyDKC,EAxEI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAEpB,OACE,yBAAK9E,UAAU,cACb,kDACA,2BACG8E,EADH,6dAUA,yBAAK9E,UAAU,YACb,kBAAC,EAAD,CACEyE,WAAW,eACXC,aAAa,uBACbC,MAAM,uBACNtE,KAAK,eACLuE,SAAS,iCAEX,kBAAC,EAAD,CACEH,WAAW,UACXC,aAAa,uBACbC,MAAM,uBACNtE,KAAK,gBACLuE,SAAS,iCAEX,kBAAC,EAAD,CACEH,WAAW,aACXC,aAAa,uBACbC,MAAM,uBACNtE,KAAK,iBACLuE,SAAS,kCAGb,yBAAK5E,UAAU,cACb,0CACA,uBACE+C,KAAK,mEACLgC,OAAO,UAEP,yBAAK/E,UAAU,SACb,yBACES,IAA8B,qBAC9BE,IAAI,YAKZ,yBAAKX,UAAU,YACb,+CAEA,uBAAG+C,KAAK,4CAA4CgC,OAAO,UACzD,yBAAK/E,UAAU,YACb,yBACEA,UAAU,OACVS,IAA8B,sBAC9BE,IAAI,eAKZ,yBAAKX,UAAU,gBACb,kBAAC,IAAD,CAAaA,UAAU,eADzB,IACyC,iDAE3C,kBAAC,EAAD,CAAa4B,cAAe,O,wBC5DjBoD,EAVO,WAAO,IAAD,EACFC,mBAAS,CAAEC,KAAM,IAAIC,OADnB,mBACnBD,EADmB,KACbE,EADa,KAI1B,OACE,yBAAKpF,UAAU,YACb,kBAAC,IAAD,CAAUqF,SAHG,SAACH,GAAD,OAAUE,EAAQ,CAAEF,UAGHnD,MAAOmD,EAAKA,SCcjCI,EApBI,SAAC,GAA0B,IAAxB5C,EAAuB,EAAvBA,KAAuB,EAAjBD,WAC1B,OACE,yBAAKzC,UAAU,cACb,wBAAIA,UAAU,cAAd,gCACA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAAY8E,WAAYpC,KAE1B,yBAAK1C,UAAU,SACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,QACb,6CCoBGuF,EAzBH,WACV,IAAMrC,EAAUC,EAAWD,QAC3B,OACE,kBAAC,IAAD,KACE,yBAAKlD,UAAU,OACf,kBAAC,EAAD,MACE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACuF,KAAK,IAAIC,UAAW/D,IACjC,kBAAC,IAAD,CAAO8D,KAAK,WAAWC,UAAWxC,IAClC,kBAAC,IAAD,CAAOuC,KAAK,eAAeC,UAAWxB,IACtC,kBAAC,IAAD,CAAOuB,KAAK,YAAYC,UAAWlC,IAClCL,EAAQjC,KAAI,SAACoC,GAAD,OACX,kBAAC,IAAD,CAAOmC,KAAO,WAAanC,EAAMT,GAAI6C,UAAWH,OAGlD,kBAAC,IAAD,CAAOI,KAAK,IAAIxF,GAAG,IAAIuF,UAAW/D,QCjBxBiE,QACW,cAA7B7F,OAAO8F,SAASC,UAEe,UAA7B/F,OAAO8F,SAASC,UAEhB/F,OAAO8F,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMpG,c","file":"static/js/main.40dcbf4e.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./navigation.scss\";\nconst Navigation = () => {\n  const scrollToTop = () => {\n    window.scrollTo(0, 0);\n  };\n  return (\n    <div className=\"navigation\">\n      <div className=\"logo\">\n        <div className=\"profileCirkle\">\n          \n        </div>\n        <div className=\"text\">\n          <h4>cool name</h4>\n        </div>\n      </div>\n      <div className=\"menu\">\n        <NavLink exact to=\"/\" onClick={() => scrollToTop()}>\n          Home\n        </NavLink>\n        <NavLink exact to=\"/courses\" onClick={() => scrollToTop()}>\n          Courses\n        </NavLink>\n        <NavLink exact to=\"/assignments\" onClick={() => scrollToTop()}>\n          Assignments\n        </NavLink>\n        <NavLink exact to=\"/projects\" onClick={() => scrollToTop()}>\n          projects\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./news.scss\";\n\nconst News = ({ name, imgUrl, message }) => {\n  return (\n    <div className=\"newsbox\">\n      <div class=\"profileimage\">\n        <img src={process.env.PUBLIC_URL + imgUrl} alt={name} />\n      </div>\n      <div className=\"name\">\n        <h2>{name}</h2>\n      </div>\n      <div className=\"message\">\n        <p>{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport \"./newsfeed.scss\";\nimport News from \"./news\";\nimport data from \"../../../jsonData/newsfeeddata.json\";\n\nconst Newsfeed = () => {\n  const newsfeeddata = data.news;\n  return (\n    <div className=\"newsfeed\">\n      <h1>Newsfeed</h1>\n      <div classname=\"newsbox\">\n        {newsfeeddata.map((newsdata) => (\n          <News\n            name={newsdata.name}\n            imgUrl={newsdata.imgUrl}\n            message={newsdata.message}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Newsfeed;\n","import React from \"react\";\nimport \"./notis.scss\";\nimport { GoBell } from \"react-icons/go\";\n\nimport { AiFillUnlock } from \"react-icons/ai\";\nimport { AiOutlineForm } from \"react-icons/ai\";\n\nconst getIcon = (type) => {\n  if (type == \"goBell\") {\n    return <GoBell />;\n  } else if (type == \"lock\") {\n    return <AiFillUnlock />;\n  } else if (type == \"form\") {\n    return <AiOutlineForm />;\n  }\n};\nconst Notis = ({ message, icon }) => {\n  return (\n    <div className=\"notisbox\">\n      <div className=\"notisicon\">{getIcon(icon)}</div>\n      <div className=\"notismsg\">\n        <p>{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Notis;\n","import React from \"react\";\nimport \"./notifications.scss\";\nimport Notis from \"./notis\";\nimport data from \"../../../jsonData/notificationdata.json\";\n\nconst Notifications = () => {\n  const notisdata = data.notifications;\n  return (\n    <div className=\"info\">\n      <h1>Notifications</h1>\n      {notisdata.map((nodata) => (\n        <Notis icon={nodata.icon} message={nodata.message} />\n      ))}\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport \"./home.scss\";\nimport Newsfeed from \"./newsfeed/newsfeed\";\nimport Notifications from \"./notifications/notifications\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Home</h1>\n      <div className=\"grid-container\">\n        <div className=\"item1\">\n          {\" \"}\n          <Newsfeed />\n        </div>\n        <div className=\"item2\">\n          {\" \"}\n          <Notifications />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nconst ProgressBar =({inputProgress})=>{\n    const setProgressbar = (progress) => {\n        const percentage = progress;\n        return (\n          <CircularProgressbar\n            value={percentage}\n            text={`${percentage}%`}\n            styles={buildStyles({\n              textSize: \"30px\",\n              pathColor: `rgba(115, 167, 144, ${percentage / 20})`,\n              textColor: \"#1f1f1f\",\n              trailColor: \"#fafafa\",\n            })}\n          />\n        );\n      };\n    return(\n        <div className=\"progressBar\">{setProgressbar(inputProgress)}</div>\n    )\n}\nexport default ProgressBar;","import React, { useState } from \"react\";\nimport \"./courseBox.scss\";\nimport { FaGraduationCap } from \"react-icons/fa\";\nimport { IoIosPeople } from \"react-icons/io\";\nimport ProgressBar from \"../../progressBar/progressBar\";\n\nconst CourseBox = ({\n  courseName,\n  imgUrl,\n  info,\n  newCourse,\n  id,\n  hp,\n  participants,\n  inputProgress,\n}) => {\n  const checkIfNewCourse = () => {\n    if (newCourse) {\n      return (\n        <div className=\"newCourseBox\">\n          <h4>New</h4>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <a href={\"#/course/\" + id} className=\"courseBox\">\n      <div className=\"box\">\n        <div className=\"imageBox\">\n          <img src={process.env.PUBLIC_URL + imgUrl} alt={courseName} />\n          {checkIfNewCourse()}\n        </div>\n        <h2>{courseName}</h2>\n        <div className=\"hp\">\n          <FaGraduationCap className=\"graduationCap\" />\n          <h4>{hp}hp</h4>\n        </div>\n        <p>{info}</p>\n        <div className=\"participants\">\n          <IoIosPeople className=\"peopleicon\" />{\" \"}\n          <h4>{participants} participants</h4>\n        </div>\n        <ProgressBar inputProgress={inputProgress} />\n      </div>\n      <div className=\"open\">\n        <h2>Click to open</h2>\n      </div>\n    </a>\n  );\n};\n\nexport default CourseBox;\n","import React from \"react\";\nimport \"./courses.scss\";\nimport CourseBox from \"./courseBox/courseBox\";\nimport courseData from \"../../jsonData/courses.json\";\n\nconst Courses = () => {\n  \n  const courses = courseData.courses;\n  const completedCourses= courseData.completedCourses\n  return (\n    <div className=\"onGoing\">\n      <h1>Ongoing courses</h1>\n      <div className=\"coursBoxes\">\n        {courses.map((cours) => (\n          <CourseBox\n            courseName={cours.courseName}\n            imgUrl={cours.imgUrl}\n            info={cours.info}\n            newCourse={cours.newCourse}\n            id={cours.id}\n            hp={cours.hp}\n            participants={cours.participants}\n            inputProgress={cours.progress}\n          />\n        ))}\n      </div>\n      <h1>Completed courses</h1>\n      <div className=\"coursBoxes\">\n        {completedCourses.map((completedCours) => (\n          <CourseBox\n            courseName={completedCours.courseName}\n            imgUrl={completedCours.imgUrl}\n            info={completedCours.info}\n            newCourse={completedCours.newCourse}\n            id={completedCours.id}\n            hp={completedCours.hp}\n            participants={completedCours.participants}\n            inputProgress={completedCours.progress}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Courses;\n","import React from \"react\";\nimport \"./projects.scss\";\n\nconst Projects = () => {\n  return (\n    <section>\n      <div>\n        <h1>Projects</h1>\n      </div>\n    </section>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport \"./assignmentbox.scss\"\n\nconst Assignmentbox = ( {assignment,corrected, submitted, passed, info, duration}) => {\n \n  const checkStatus=()=>{\n    if (submitted)  {\n      if(corrected){\n        if(passed){\n          return (\n            <div className=\"passed\">\n              <h2>Passed</h2>\n            </div>\n          )\n        } else if(!passed){\n          return(\n            <div className=\"notPassed\">\n              <h2>Not passed</h2>\n            </div>\n          )\n        } \n      } else{\n        return(\n        <div className=\"submitted\">\n            <h2>Submitted</h2>\n        </div>\n         ) }\n    } else{\n        return(\n          <div className=\"notSubmitted\">\n            <h2>Not submitted</h2>\n          </div>\n        )\n      } \n  }\n\n  return (\n    <div className=\"assignment\">\n      <div className=\"assignmentBox\">\n        {checkStatus()}\n        <div className=\"assigInfo\">\n          <p>{info}</p> \n            <div className=\"duration\">\n              <p>Expected duration: {duration} hours</p>\n            </div>\n        </div>\n      </div>\n          <h4>{assignment} </h4>\n    </div>  \n      \n  );\n};\n\nexport default Assignmentbox;","import React from \"react\";\nimport \"./quizbox.scss\"\n\nconst QuizBox = ( {quizName, information, submitted, progress}) => {\n\n  const checkStatus=()=>{\n    if(submitted){\n      return(\n        <div className=\"submitted\">\n          <h2>Submitted</h2>\n        </div>\n      )\n    } else{\n      return(\n        <div className=\"notSubmitted\">\n          <h2>Not started</h2>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"quiz\">\n      <div className=\"quizBox\">\n          {checkStatus()}\n          <div className=\"quizInfo\">\n              <p>{information}</p>\n              <div className=\"progress\">\n                  <p>Progress: {progress}%</p>\n              </div>\n          </div>\n          \n      </div>\n      <h4>{quizName}</h4>\n    </div>\n  );\n};\n\nexport default QuizBox;","import React, { Component } from \"react\";\nimport \"./assignments.scss\";\nimport Assignmentbox from \"./assignmentbox/assignmentbox\";\nimport QuizBox from \"./quizbox/quixbox\";\nimport assignmentData from \"../../jsonData/assignments.json\";\n\n\nconst Assignments = () => {\n  const assignments = assignmentData.assignments;\n  const quizes = assignmentData.quiz;\n\n  return (\n    <section>\n      <div className=\"assignments\">\n        <h1>Assignments</h1>\n        <div className=\"assignmentboxes\">\n          {\n            assignments.map((assignment) => (\n              <Assignmentbox \n                  assignment={assignment.title} \n                  corrected={assignment.corrected}\n                  submitted={assignment.submitted} \n                  passed={assignment.passed} \n                  info={assignment.information}\n                  duration={assignment.duration}/>\n            ))\n          }\n        </div>\n      </div>\n\n      <div className=\"quizes\">\n          <h1>Quiz and Tests</h1>\n          <div className=\"quizboxes\">\n            {\n              quizes.map((quiz) => (\n                 <QuizBox \n                    quizName={quiz.quizName} \n                    submitted={quiz.submitted} \n                    information={quiz.information}\n                    progress={quiz.progress}/>\n              ))\n            }\n          </div>\n      </div>\n      \n    </section>\n  );\n};\n\n\nexport default Assignments;\n","import React from \"react\";\nimport \"./right-side-bar.scss\";\n\nconst RightSideBar = () => {\n  return <div className=\"bar\">\n      <h2>Calender</h2>\n      <h2>Deadlines</h2>\n  </div>;\n};\n\nexport default RightSideBar;\n","import React from \"react\";\nimport \"./profileBox.scss\";\nimport { FiMail } from \"react-icons/fi\";\nimport { FaLinkedin } from \"react-icons/fa\";\n\nconst ProfileBox = ({ employment, profileImage, email, name, linkedIn }) => {\n  return (\n    <div className=\"profileBox\">\n      <h4>{employment}</h4>\n\n      <img\n        className=\"profileImage\"\n        src={process.env.PUBLIC_URL + profileImage}\n        alt={name}\n      />\n      <h5>{name}</h5>\n      <div className=\"quickLinks\">\n        <a href={\"mailto:\" + email}>\n          <FiMail />\n        </a>\n        <a href={linkedIn}>\n          <FaLinkedin />\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default ProfileBox;\n","import React from \"react\";\nimport \"./courseInfo.scss\";\nimport ProfileBox from \"./profileBox/profileBox\";\nimport { IoIosPeople } from \"react-icons/io\";\nimport ProgressBar from \"../../../progressBar/progressBar\"\n\nconst CourseInfo = ({ courseInfo }) => {\n  \n  return (\n    <div className=\"courseInfo\">\n      <h2>Course Information</h2>\n      <p>\n        {courseInfo}\n        In the first part of this course, we will go over some fundamentals of\n        social media. Later, you will develop your own social medium and\n        implement a prototype. This will be done in collaboration with marketing\n        students at ECU Perth in Australia who perform a market analysis to\n        identify gaps in current social media platforms. The results from the\n        marketing analysis will be your starting point for your projects. We\n        will run all lectures and meetings online through Zoom at\n      </p>\n      <div className=\"profiles\">\n        <ProfileBox\n          employment=\"Head Teacher\"\n          profileImage=\"/images/profile2.jpg\"\n          email=\"something@school.com\"\n          name=\"Carole Jones\"\n          linkedIn=\"https://www.linkedin.com/in/\"\n        />\n        <ProfileBox\n          employment=\"Teacher\"\n          profileImage=\"/images/profile3.jpg\"\n          email=\"something@school.com\"\n          name=\"Steve Johnson\"\n          linkedIn=\"https://www.linkedin.com/in/\"\n        />\n        <ProfileBox\n          employment=\"Supervisor\"\n          profileImage=\"/images/profile1.jpg\"\n          email=\"something@school.com\"\n          name=\"Leif Andersson\"\n          linkedIn=\"https://www.linkedin.com/in/\"\n        />\n      </div>\n      <div className=\"literature\">\n        <h2>Literature</h2>\n        <a\n          href=\"https://www.googleapis.com/books/v1/volumes?q=isbn:9780593076118\"\n          target=\"_blank\"\n        >\n          <div className=\"book1\">\n            <img\n              src={process.env.PUBLIC_URL + \"/images/sprint.jpg\"}\n              alt=\"book\"\n            />\n          </div>\n        </a>\n      </div>\n      <div className=\"software\">\n        <h2>Software needed</h2>\n\n        <a href=\"https://www.adobe.com/se/products/xd.html\" target=\"_blank\">\n          <div className=\"program1\">\n            <img\n              className=\"logo\"\n              src={process.env.PUBLIC_URL + \"/images/adobeXD.png\"}\n              alt=\"program\"\n            />\n          </div>\n        </a>\n      </div>\n      <div className=\"participants\">\n        <IoIosPeople className=\"peopleicon\" /> <h4> 11 participants</h4>\n      </div>\n    <ProgressBar inputProgress={45}/>\n    </div>\n  );\n};\nexport default CourseInfo;\n","import React, { useState } from \"react\";\nimport \"./calendar.scss\";\nimport Calendar from \"react-calendar\";\n\nconst ReactCalendar = () => {\n  const [date, setDate] = useState({ date: new Date() });\n\n  const onChange = (date) => setDate({ date });\n  return (\n    <div className=\"calendar\">\n      <Calendar onChange={onChange} value={date.date} />\n    </div>\n  );\n};\nexport default ReactCalendar;\n","import React, { useState } from \"react\";\nimport \"./coursePage.scss\";\nimport CourseInfo from \"./courseInfo/courseInfo\";\nimport Calendar from \"./calendar/calendar\";\nconst CoursePage = ({ info, courseName }) => {\n  return (\n    <div className=\"coursePage\">\n      <h1 className=\"courseName\">Technology for social media </h1>\n      <div className=\"coursePage-container\">\n        <div className=\"course-info\">\n          <CourseInfo courseInfo={info} />\n        </div>\n        <div className=\"right\">\n          <div className=\"calendar-box\">\n            <Calendar />\n          </div>\n          <div className=\"news\">\n            <h2>Newsfeed</h2>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CoursePage;\n","import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Navigation from \"../navigation/navigation\";\nimport Home from \"../home/home\";\nimport Courses from \"../courses/courses\";\nimport Projects from \"../projeccts/projects\";\nimport Assignments from \"../assignments/assignments\";\nimport RightSideBar from \"../right-side-bar/right-side-bar\";\nimport \"./app.scss\";\nimport \"../../resources/site.scss\";\nimport CoursePage from \"../courses/coursePage/coursePage\";\nimport courseData from \"../../jsonData/courses.json\"\nconst App = () => {\n  const courses = courseData.courses;\n  return (\n    <HashRouter>\n      <div className=\"app\">\n      <RightSideBar />\n        <Navigation />\n       \n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/courses\" component={Courses} />\n          <Route path=\"/assignments\" component={Assignments} />\n          <Route path=\"/projects\" component={Projects} />\n          {courses.map((cours)=>(\n            <Route path ={\"/course/\" + cours.id} component={CoursePage} />\n          ))}\n          \n          <Route from=\"*\" to=\"/\" component={Home} />\n        </Switch>\n        \n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}